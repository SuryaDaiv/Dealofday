{"version":3,"sources":["components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","electronic-devices.js","helpers.js","components/Fish.js","components/PaymentForm.js","components/StripeContainer.js","components/StorePickerHead.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","required","ref","selected","type","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","placeholder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","displayName","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","device1","device2","device3","device4","device5","device6","device7","device8","device9","formatPrice","cents","toLocaleString","style","currency","Fish","details","isAvailable","src","alt","disabled","addToOrder","CARD_OPTIONS","iconStyle","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","fontColor","invalid","PaymentForm","useState","success","setSuccess","stripe","useStripe","elements","useElements","handleSubmit","e","createPaymentMethod","card","getElement","CardElement","error","paymentMethod","id","axios","amount","total","message","textAlign","width","frameBorder","class","allowFullScreen","options","stripeTestPromise","loadStripe","StripeContainer","renderOrder","count","order","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","showItem","orderIds","reduce","prevTotal","StorePickerHead","saveScroll","App","target","Date","now","window","location","pathname","sampleFishes","testData","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.e856ee9e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n      <h1>Choose the deal you want to see</h1>\n      <label>\n        <select required ref={this.myInput}>\n          <option value=\"\" selected></option>\n          <option value=\"Fish market\">Fish market</option>\n          <option value=\"Electronics market\">Electronics market</option>\n        </select>\n      </label>\n      <button type=\"submit\">Visit Store →</button>\n    </form>\n\n      // <form className=\"store-selector\" onSubmit={this.goToStore}>\n      //   <h2>Please Enter A Store</h2>\n      //   <input\n      //     type=\"text\"\n      //     ref={this.myInput}\n      //     required\n      //     placeholder=\"Store Name\"\n      //     // defaultValue={getFunName()}\n      //     defaultValue=\"Fish market\"\n      //   />\n      //   <button type=\"submit\">Visit Store →</button>\n      // </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Deal\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]:\n        event.currentTarget.name === 'price'\n          ? parseFloat(event.currentTarget.value)\n          : event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Profile Login</h2>\n    <p>Sign in to view your Order History and Reviews.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    {/* <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button> */}\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  // apiKey: \"AIzaSyDXUCNSpi5u07F76httlCTXAA4mPVQlEHs\",\n  // authDomain: \"catch-of-the-day-wes-bos-2.firebaseapp.com\",\n  // databaseURL: \"https://catch-of-the-day-wes-bos-2.firebaseio.com\"\n  apiKey: \"AIzaSyBOJGKxec-NvZRTvoZlQ7mUPxRb4VPKvV8\",\n  authDomain: \"deal-of-the-day-project.firebaseapp.com\",\n  databaseURL: \"https://deal-of-the-day-project-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1 .Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      name: authData.user.displayName,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <h2>Profile Section</h2>\n          <h2>Welcome ( ͡❛ ͜ʖ ͡❛ ) 🙏, {this.state.name}, The Profile section is under 👷‍♀️ 🚧</h2>\n          <p>Once completed you will find your order history, and reviews</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Data\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  device1: {\n    name: \"Ipad\",\n    image: \"/images/ipad.jfif\",\n    desc:\n      \"An iPad is a tablet PC designed by Apple Inc. The iPad features a 9.7-inch touch screen.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  device2: {\n    name: \"Iphone\",\n    image: \"/images/iphone.jfif\",\n    desc:\n      \"The iPhone has a sleek, minimalist design, and differs from other smartphones in its lack of buttons.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  device3: {\n    name: \"Apple TV\",\n    image: \"/images/apple tv.jpg\",\n    desc:\n      \"It is a small network appliance and entertainment device that can receive digital data for visual and audio content such as music, video, video games.\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  device4: {\n    name: \"Airpods\",\n    image: \"/images/airpods.jfif\",\n    desc:\n      \"Driven by the custom Apple W1 chip, AirPods use optical sensors and a motion accelerometer to detect when they're in your ears.\",\n    price: 1129,\n    status: \"available\"\n  },\n\n  device5: {\n    name: \"Homepod\",\n    image: \"/images/Homepod.jfif\",\n    desc:\n      \"HomePod is a breakthrough speaker with high‑fidelity audio that adapts to its location.\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  device6: {\n    name: \"Macbook\",\n    image: \"/images/Macbook.jpg\",\n    desc:\n      \"Apple MacBook Pro is a macOS laptop with a 13.30-inch display that has a resolution of 2560x1600 pixels!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  device7: {\n    name: \"Google Clips\",\n    image: \"/images/google-clips.jpg\",\n    desc: \"Google Clips is a discontinued miniature clip-on camera device developed by Google.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  device8: {\n    name: \"Pixelbuds\",\n    image: \"/images/pixelbuds.jfif\",\n    desc:\n      \"Google Pixel Buds are truly wireless earbuds that are specially designed for a comfortable, customizable fit.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  device9: {\n    name: \"Pixelslate\",\n    image: \"/images/Pixelslate.jfif\",\n    desc:\n      \"The Pixel Slate is Google's latest entry into the booming category of tablet-laptop hybrids.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from 'react';\r\nimport { formatPrice } from \"../helpers\";\r\n// import success from  \"public/images/success.gif\";\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0f0\",\r\n\t\t\tcolor: \"#10CF19\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n                        fontColor: \"#ffffff\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#FF334C\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function PaymentForm(props) {\r\n    const [success, setSuccess ] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()    \r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n\r\n    if(!error) {\r\n        try {\r\n            const {id} = paymentMethod\r\n            const response = await axios.post(\"https://backendpay.herokuapp.com/payment\", {\r\n                amount: props.total,\r\n                id\r\n            })\r\n\r\n            if(response.data.success) {\r\n                console.log(\"Successful payment\")\r\n                setSuccess(true)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(\"Error\", error)\r\n        }\r\n    } else {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n    return (\r\n        <>\r\n        {!success && !(props.total==0)? \r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset className=\"FormGroup\">\r\n                <div className=\"FormRow\">\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                </div>\r\n            </fieldset>\r\n            <button>Pay</button>\r\n        </form>\r\n        :\r\n       <div>\r\n           <h4 style={{textAlign: \"center\"}}>Payment for {formatPrice(props.total)} has been Successfully Completed</h4>\r\n           {/* <img src={success}/> */}\r\n           <iframe src=\"https://giphy.com/embed/qms15Fp6yItUDYRSj9\" width=\"250\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\r\n       </div> \r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport React from \"react\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nconst PUBLIC_KEY = \"pk_test_51IJXWkJxMDhneAhqBlfJJQYKTmpR4hHCl9RYmy6ZCWKYTe17oebgVavR5SGSmI5scsyZO74XUZ2MuqpGS5Xv6VbN00J81GAzEs\"\r\n\r\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\r\n\r\nclass StripeContainer extends React.Component {\r\n        constructor(props) {\r\n                super(props);\r\n                this.state = {\r\n                        showItem: false\r\n                };\r\n                }\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  };\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    console.log(fish)\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    // Make sure the fish is loaded before we continue!\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n      <li key={key}>\r\n        <span>\r\n          <TransitionGroup component=\"span\" className=\"count\">\r\n            <CSSTransition\r\n              classNames=\"count\"\r\n              key={count}\r\n              timeout={{ enter: 500, exit: 500 }}\r\n            >\r\n              <span>{count}</span>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n          lbs {fish.name} &emsp; {formatPrice(count * fish.price)}\r\n          <button onClick={() => this.props.removeFromOrder(key)}>\r\n            &times;\r\n          </button>\r\n        </span>\r\n      </li>\r\n    </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      \r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      \r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        {this.state.showItem ? \r\n                <Elements stripe={stripeTestPromise}>\r\n\t\t\t<PaymentForm total={total} />\r\n\t\t</Elements> : \r\n        <> \r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      <button onClick={() => this.setState({ showItem: true })}>Go for Payments</button></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StripeContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// #########################################################\r\n// Working code\r\n\r\n\r\n// import { Elements } from \"@stripe/react-stripe-js\"\r\n// import { loadStripe } from \"@stripe/stripe-js\"\r\n// import React from \"react\"\r\n// import Order from \"./Order\"\r\n// import PaymentForm from \"./PaymentForm\"\r\n\r\n// const PUBLIC_KEY = \"pk_test_51IJXWkJxMDhneAhqBlfJJQYKTmpR4hHCl9RYmy6ZCWKYTe17oebgVavR5SGSmI5scsyZO74XUZ2MuqpGS5Xv6VbN00J81GAzEs\"\r\n\r\n// const stripeTestPromise = loadStripe(PUBLIC_KEY)\r\n\r\n// export default function StripeContainer() {\r\n// \treturn (\r\n// \t\t<Elements stripe={stripeTestPromise}>\r\n\t\t\t\r\n// \t\t\t<PaymentForm />\r\n//                         <Order\r\n//                                 fishes={this.state.fishes}\r\n//                                 order={this.state.order}\r\n//                                 removeFromOrder={this.removeFromOrder}\r\n//                         />\r\n\r\n// \t\t</Elements>\r\n// \t)\r\n// }\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { getFunName } from \"../helpers\";\r\n\r\nclass StorePickerHead extends React.Component {\r\n  // myInput = React.createRef();\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n  saveScroll = event => {\r\n      };\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.saveScroll}>\r\n      <h1>Choose the deal you want to see</h1>\r\n      <label>\r\n        <select required\r\n         onChange={this.props.goToStore}>\r\n          <option value=\"\" selected></option>\r\n          <option value=\"Fish market\">Fish market</option>\r\n          <option value=\"Electronics market\">Electronics market</option>\r\n        </select>\r\n      </label>\r\n      <button type=\"submit\">Visit Store →</button>\r\n    </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePickerHead;\r\n\r\n{/* <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n<h2>Please Enter A Store</h2>\r\n<input\r\n  type=\"text\"\r\n  ref={this.myInput}\r\n  required\r\n  placeholder=\"Store Name\"\r\n  defaultValue=\"fish store\"\r\n/>\r\n<button type=\"submit\">Visit Store →</button>\r\n</form> */}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport testData from \"../electronic-devices\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\nimport StripeContainer from \"./StripeContainer\";\nimport StorePickerHead from \"./StorePickerHead\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n    value: ''\n  };\n  myInput = React.createRef();\n  static propTypes = {\n    match: PropTypes.object,\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    // this.setState({value: event.target.value})\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${event.target.value}`);\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3.  update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    if (window.location.pathname== \"/store/Fish%20market\"){\n    this.setState({ fishes: sampleFishes });}\n    else if (window.location.pathname== \"/store/Electronics%20market\"){\n    this.setState({ fishes: testData});}\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    const {value} = this.state\n    return (\n        <div >\n        <StorePickerHead\n          goToStore={this.goToStore}\n          ref={this.myInput}\n          value={value}\n        />\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Our Best Sourced Ecommerce\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <StripeContainer\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        {/* <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        /> */}\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}